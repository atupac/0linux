#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=1.6.1
WGET=http://nginx.org/download/$NAMESRC-$VERSION.tar.gz
DESC="Des bibliothèques et outils pour faire fonctionner quelque chose de précis..."
EXTRADEPS="geoiplibtruc libmachin gconf xproto"

telecharger_sources
preparer_sources # À partir d'ici, on se trouve dans les sources décompactées.
cflags

# On crée les répertoires d'accueil :
mkdir -p ${PKG}/etc/nginx/nginx.conf.d
mkdir -p ${PKG}/var/lib/nginx

# et on restreint les permissions au serveur :
chmod 0700 ${PKG}/var/lib/nginx

# On corrige l'emplacement de la configuration pour les hôtes virtuels et la
# documentation HTML :
sed -i -e "/root[ ]*html/s|html;|/usr/doc/${NAMETGS}-${VERSION}/&|" \
	-e '$s|.*|    include /etc/nginx/nginx.conf.d/\*.conf;\n&|' \
	conf/nginx.conf

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
./configure \
	--prefix=/usr \
	--conf-path=/etc/nginx/nginx.conf \
	--error-log-path=/var/log/nginx/error.log \
	--group=nogroup \
	--http-client-body-temp-path=/var/lib/nginx/client_body \
	--http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
	--http-log-path=/var/log/nginx/access.log \
	--http-proxy-temp-path=/var/lib/nginx/proxy \
	--http-scgi-temp-path=/var/lib/nginx/scgi \
	--http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
	--lock-path=/run/lock/nginx.lock \
	--pid-path=/run/nginx.pid \
	--sbin-path=/usr/sbin/nginx \
	--user=nobody \
	--with-file-aio \
	--with-http_addition_module \
	--with-http_auth_request_module \
	--with-http_dav_module \
	--with-http_degradation_module \
	--with-http_flv_module \
	--with-http_geoip_module \
	--with-http_gunzip_module \
	--with-http_gzip_static_module \
	--with-http_mp4_module \
	--with-http_perl_module \
	--with-http_random_index_module \
	--with-http_realip_module \
	--with-http_secure_link_module \
	--with-http_spdy_module \
	--with-http_ssl_module \
	--with-http_stub_status_module \
	--with-http_sub_module \
	--with-http_xslt_module \
	--with-imap \
	--with-imap_ssl_module \
	--with-ipv6 \
	--with-mail \
	--with-mail_ssl_module \
	--with-pcre-jit \
	--with-poll_module \
	--with-select_module

make -j${JOBS} || make
fakeroot make install INSTALLDIRS=vendor INSTALLVENDORMAN3DIR=/usr/man/man3 DESTDIR=${PKG}

# On place le manuel manuellement (hu hu) :
mkdir -p ${PKG}/usr/man/man8
cp objs/nginx.8 ${PKG}/usr/man/man8/

# On corrige des permissions problématiques :
find ${PKG} -perm 444 -exec chmod 0644 {} \;
find ${PKG} -perm 555 -exec chmod 0755 {} \;

# On place les fichiers pour 'vim' :
mkdir -p ${PKG}/usr/share/vim/vimfiles
cp -ar contrib/vim/ftdetect ${PKG}/usr/share/vim/vimfiles/
cp -ar contrib/vim/syntax ${PKG}/usr/share/vim/vimfiles/
cp -ar contrib/vim/indent ${PKG}/usr/share/vim/vimfiles/

# On crée un fichier pour le renouvellement des journaux sans rien écraser :
mkdir -p ${PKG}/etc/logrotate.d
cat > ${PKG}/etc/logrotate.d/nginx.0nouveau << "EOF"
/var/log/nginx/*.log {
	su nobody nogroup
	rotate 10
	notifempty
	size=5M
	compress
	delaycompress
	sharedscripts
	postrotate
		/etc/rc.d/rc.nginx restart
	endscript
}

EOF

# On veille à n'écraser aucune configuration existante :
for conf in $(find $PKG/etc/nginx -type f ! -name "*\.default"); do
	mv ${conf}{,.0nouveau}
done

# On crée le fichier service, désactivé par défaut :
mkdir -p ${PKG}/etc/rc.d
cat > ${PKG}/etc/rc.d/rc.httpd << "EOF"
#!/usr/bin/env bash

nginx_start() {
	echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Démarrage de nginx..."
	nginx -t -c /etc/nginx/nginx.conf
}

nginx_stop() {
	echo -e "[ \033[${ANSI_COLOR}m$(basename $0)\033[0;0m ] Arrêt de nginx..."
	killall nginx
	rm -f /run/nginx.pid
}

case "$1" in
	'start')
		nginx_start
	;;
	
	'stop')
		nginx_stop
	;;
	
	'restart')
		nginx_stop
		sleep 1
		nginx_start
	;;
	
	*)
		echo "Utilisation : $0 start|stop|restart"
		exit 1
	;;

esac

EOF

installer_doc

# On déplace ça dans la doc :
mv ${PKG}/usr/html $PKG/usr/doc/${NAMETGZ}-${VERSION}/

creer_post_installation

# On complète la post-installation :
cat >> ${PKG}/post-install.sh << "EOF"

# On s'assure des permissions des journaux :
chown nobody var/log/nginx
chmod 750 var/log/nginx

EOF

stripper
empaqueter

# C'est fini.
