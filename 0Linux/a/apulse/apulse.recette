#!/usr/bin/env bash
. /usr/share/0outils/fonctions_paquets.sh

VERSION=0.1.1
WGET=https://github.com/i-rinat/$NAMESRC/archive/v${VERSION}.tar.gz
DESC="Émulateur PulseAudio pour ALSA"

telecharger_sources
cflags

# On compile le 32 bits pour x86_64 :
if [ "${PKGARCH}" = "x86_64" ]; then
	
	# On passe en 32 bits :
	preparer_sources
	cflags i686
	
	# La compilation se fait dans un répertoire dédié :
	mkdir -p build
	cd build
	
	# Compilation :
	CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
	cmake \
		-D CMAKE_BUILD_TYPE=Release \
		-D CMAKE_INSTALL_PREFIX=/usr \
		..

	make -j${JOBS} || make
	fakeroot make install DESTDIR=${PKG}
	cd -
	
	# On déplace les bibliothèques où il faut :
	if [ ! "${LIBDIRSUFFIX}" = "" ]; then
		mv ${PKG}/usr/lib{,${LIBDIRSUFFIX}}
	fi
fi

preparer_sources
cflags

# La compilation se fait dans un répertoire dédié :
mkdir -p build
cd build

# Compilation :
CFLAGS="${FLAGS}" CXXFLAGS="${FLAGS}" \
cmake \
	-D CMAKE_BUILD_TYPE=Release \
	-D CMAKE_INSTALL_PREFIX=/usr \
	-D INSTALL_LIBDIR="lib${LIBDIRSUFFIX}" \
	..

# On fait attention à ne pas écraser les fichiers 32 bits sous x86_64 multilib :
if [ "${PKGARCH}" = "x86_64" ]; then
	[ -d ${PKG}/usr/lib ] && mv ${PKG}/usr/lib{,32}
fi

make -j${JOBS} || make
fakeroot make install DESTDIR=${PKG}
cd -

# On déplace les bibliothèques où il faut :
if [ ! "${LIBDIRSUFFIX}" = "" ]; then
	mv ${PKG}/usr/lib{,${LIBDIRSUFFIX}}
fi

# On ramène les éventuels fichiers 32 bits où il faut :
if [ "${PKGARCH}" = "x86_64" ]; then
	[ -d ${PKG}/usr/lib32 ] && mv ${PKG}/usr/lib{32,}
fi

installer_doc
creer_post_installation
stripper
empaqueter

# C'est fini.
