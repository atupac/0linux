#!/usr/bin/env bash

# On crée les répertoires temporaires s'ils n'existent pas :
TMP=${TMP:-/var/log/setup/tmp}
mkdir -p ${TMP}

# La racine de destination du système à installer:
export SETUPROOT=${SETUPROOT:-/setuproot}
mkdir -p ${SETUPROOT}

# On extrait l'identification du système, version, etc. :
source /etc/os-release

# Cette fonction supprime les espaces superflus via 'echo' :
crunch() {
	read STRING;
	echo ${STRING};
}

# On vide $TMP, sans toucher au fichier 'choix_clavier' :
rm -f $TMP/{choix_partitions,choix_partitions_fat,choix_media,choix_swap}
rm -f $TMP/{fstab,formatages,partition_racine}

# On vérifie qu'on n'est pas dans un mode spécial d'installation (mode automatique) :
if [ -n "$1" ]; then
	
	# Mode automatique :
	if [ "$1" = "auto" ]; then
		
		ABO_PAR_DEFAUT="base-abonnement opt-abonnement xorg-abonnement xfce-abonnement chrome dropbox epdfview firefox flashplayer gparted pidgin skype steam thunderbird transmission vlc"
		
		# Les variables par défaut, franco-françaises (AZERTY étendu, Paris):
		CLAVIER_CONFIG=${CLAVIER_CONFIG:-"fr-latin9"}
		HORLOGE_CONFIG=${HORLOGE_CONFIG:-"Europe/Paris"}
		LANGUE_CONFIG=${LANGUE_CONFIG:-"fr_FR.UTF-8"}
		ABONNEMENTS=${ABONNEMENTS:-"${ABO_PAR_DEFAUT}"}
		
		# On demande quel disque sacrifier :
		while [ 0 ]; do
			if [ "${INSTALLDEBUG}" = "" ]; then
				clear
			fi
			echo -e "\033[1;32mInstallation automatique.\033[0;0m"
			echo ""
			echo "Ce mode d'installation automatique va créer une partition Linux sur votre"
			echo "disque dur, la formater, la rendre amorçable et y installer le système"
			echo "0Linux. Cette méthode est DESTRUCTIVE, vous êtes prévenu(e) ! Choisissez"
			echo "dans la liste suivante le disque dur qui va accueillir le système 0Linux"
			echo "en tapant son code numérique ou appuyez sur ENTRÉE pour quitter :"
			echo ""
			echo "$(lsblk -f)"
			echo ""
			echo "1 : sda"
			echo "2 : sdb"
			echo "3 : sdc"
			echo "4 : sdd"
			echo "5 : sde"
			echo "6 : sdf"
			echo "7 : sdg"
			echo "8 : sdh"
			echo ""
			echo -n "Votre choix (1/2/3/4/5/6/7/8) : "
			read WIPEME;
			case "$WIPEME" in
			"1")
				DEVICETOWIPE="sda"
				break
			;;
			"2")
				DEVICETOWIPE="sdb"
				break
			;;
			"3")
				DEVICETOWIPE="sdc"
				break
			;;
			"4")
				DEVICETOWIPE="sdd"
				break
			;;
			"5")
				DEVICETOWIPE="sde"
				break
			;;
			"6")
				DEVICETOWIPE="sdf"
				break
			;;
			"7")
				DEVICETOWIPE="sdg"
				break
			;;
			"8")
				DEVICETOWIPE="sdh"
				break
			;;
			"")
				exit 0
			;;
			*)
				echo "Réponse probablement erronée. Veuillez entrer un chiffre entre 1 et 8."
				sleep 3
				continue
			esac
		done
		
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mInstallation automatique.\033[0;0m"
		echo ""
		echo "Le système 0Linux va être installé selon les paramètres qui vont suivre. "
		echo "Notez les mots de passe et le nom d'utilisateur (pensez à les changer"
		echo "quand vous aurez redémarré) ! Mis à part le disque dur, vous pourrez"
		echo "modifier tous ces paramètres plus tard."
		echo "Si les paramètres ne vous conviennent pas, quittez cet installateur automatique"
		echo "avec la combinaison de touches CTRL+C et appelez simplement 'installateur' pour"
		echo "l'installation interactive."
		echo "NOTE : vous devez être connecté(e) à Internet."
		echo ""
		echo -n "Appuyez sur ENTRÉE pour voir les paramètres d'installation."
		
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mParamètres d'installation.\033[0;0m"
		echo ""
		echo "Les paramètres ci-dessous vont être appliqués :"
		echo "Préparer/formater   : /dev/${DEVICETOWIPE}"
		echo "Clavier             : ${CLAVIER_CONFIG}"
		echo "Fuseau horaire      : ${HORLOGE_CONFIG}"
		echo "Langue              : ${LANGUE_CONFIG}"
		echo "Mot de passe root   : ${PWROOT_CONFIG}"
		echo "Nom d'utilisateur   : ${NOMUTILISATEUR_CONFIG}"
		echo "Et son mot de passe : ${PWUTILISATEUR_CONFIG}"
		echo "Paquets/Abonnements : ${ABONNEMENTS}"
		echo ""
		echo -n "Appuyez sur ENTRÉE pour lancer l'installation ou sur CTRL+C pour quitter."
		read STRIKE1;
		
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mConfirmer le formatage et l'installation ?\033[0;0m"
		echo ""
		echo "ATTENTION : toutes les données du disque dur '${DEVICETOWIPE}' seront perdues !"
		echo ""
		echo -n "Appuyez sur ENTRÉE pour confirmer ou sur CTRL+C pour quitter."
		read STRIKE2;
		
		# C'est parti pour le pilote automatique. On partitionne :
		echo "Création d'une partition amorçable sur '/dev/${DEVICETOWIPE}'..."
		parted -a optimal --script /dev/${DEVICETOWIPE} -- mklabel gpt
		parted -a optimal --script /dev/${DEVICETOWIPE} -- mkpart primary 0% 100%
		parted -a optimal --script /dev/${DEVICETOWIPE} -- set 1 boot on
		
		# On formate :
		echo "Formatage de '/dev/${DEVICETOWIPE}1' en ext4..."
		mkfs.ext4 -L 0LINUX /dev/${DEVICETOWIPE}1
		
		# On ajoute le montage de '/' au fichier des choix de partitions :
		echo "/dev/${DEVICETOWIPE}1 /" > $TMP/choix_partitions
		
		# On monte /setuproot et on crée le fichier 'fstab'. '/tmp' sera monté
		# en tmpfs d'office :
		. montages.sh tmp_tmpfs
		
		# On applique la configuration de façon non-interactive :
		. clavier.sh ${CLAVIER_CONFIG}
		
		# On ajoute la racine cible pour l'outil d'installation d epaquets :
		echo "ROOT=\"${SETUPROOT}\""                 >> /etc/0outils/0g.conf
		
		# On installe avec '0g' les paquets critiques :
		0g busybox
		0g base-systeme
		0g glibc
		0g ncurses readline bash sgml-common 0outils
		
		# $SETUPROOT a aussi besoin du cache de 0g :
		mkdir -p ${SETUPROOT}/var/cache/0g
		mount --bind /var/cache/0g ${SETUPROOT}/var/cache/0g 1>/dev/null 2>/dev/null
		
		# On installe avec '0g' l'ensemble des paquets et abonnements :
		0g ${ABONNEMENTS}
		
		# Configuration post-installation automatisée :
		chroot ${SETUPROOT} 0horloge ${HORLOGE_CONFIG}
		chroot ${SETUPROOT} 0locale ${LANGUE_CONFIG}
		chroot ${SETUPROOT} 0police 16
		chroot ${SETUPROOT} 0reseau dhcp
		
		# On demande le mot de passe root, l'utilisateur et son mot de passe :
		. motdepasseroot.sh
		chroot ${SETUPROOT} 0nouvel_utilisateur
		
		# On définit Xfce par défaut :
		ln -sf xinitrc.xfce ${SETUPROOT}/etc/X11/xinit/xinitrc
		
		# Installation du chargeur d'amorçage :
		. bootconfig.sh /dev/${DEVICETOWIPE}1
	fi

# Ici débute le mode d'installation classique avec questions-réponses :
else
	# On affiche l'introduction : 
	if [ "${INSTALLDEBUG}" = "" ]; then
		clear
	fi
	echo "--------------------------------------"
	echo -e "       \033[1;32mSystème autonome 0Linux\033[0;0m"
	echo "--------------------------------------"
	echo ""
	echo "Bonjour ! Bienvenue dans l'installateur de 0Linux."
	echo ""
	echo "Pour commencer, basculez sur la console n°2 avec ALT+F2 et connectez-"
	echo "vous y en root. Puis, revenez sur cette console avec ALT+F1. La console"
	echo "n°2 vous servira à lancer les outils vous permettant de renseigner"
	echo "l'installateur sur votre système (oui, il est un peu fainéant)."
	echo "Vous disposez ainsi de 6 consoles, de ALT+F1 à ALT+F6."
	echo ""
	echo "Nous espérons que vous trouverez 0Linux utile et agréable."
	echo ""
	echo "Sachez que vous pouvez quitter cet installateur à tout moment avec"
	echo "la combinaison de touches CTRL+C."
	echo ""
	echo -n "Appuyez sur ENTRÉE pour continuer."
	read GNAH1;

	# On demande à préparer les disques :
	if [ "${INSTALLDEBUG}" = "" ]; then
		clear
	fi
	echo -e "\033[1;32mPréparation de vos disques durs.\033[0;0m"
	echo ""
	echo "Vos disques durs doivent être partitionnés pour Linux avant d'installer"
	echo "votre système."
	echo ""
	echo "Pour cela, passez sur la console n°2 et invoquez 'cfdisk' pour afficher"
	echo "et partitionner vos disques durs. Les outils de partitionnement 'fdisk'"
	echo "et 'parted' sont également disponibles."
	echo ""
	echo "Vous pouvez ignorer la préparation des disques durs si vous prévoyez"
	echo "d'utiliser l'installation automatique, qui s'en occupera à votre place."
	echo ""
	echo "Consultez l'aide dans le menu qui va suivre pour en savoir plus."
	echo ""
	echo -n "Appuyez sur ENTRÉE pour continuer."
	read GNAH2;
	
	# Boucle pour l'affichage du menu :
	unset CHOIXMENUNPRINCIPAL
	
	while [ 0 ]; do
		
		# On définit les messages sur l'état d'avancement de l'installation :
		if [ -r $TMP/choix_clavier ]; then
			CLAVIERMESSAGE="configuré  : $(cat $TMP/choix_clavier)"
		else
			CLAVIERMESSAGE="définir la disposition des touches du clavier"
		fi
		
		if [ -r $TMP/choix_swap ]; then
			SWAPMESSAGE="configuré : $(cat $TMP/choix_swap | crunch | cut -d' ' -f1)"
		elif [ -r $TMP/ignorer_swap ]; then
			SWAPMESSAGE="(ignoré)"
		else
			SWAPMESSAGE="définir votre partition d'échange « swap »"
		fi
		
		if [ -r $TMP/partition_racine -a -r $TMP/partitions_linux ]; then
			PARTITIONSMESSAGE="configuré  : $(cat $TMP/partition_racine) et autres partitions"
		elif [ -r $TMP/partition_racine ]; then
			PARTITIONSMESSAGE="configuré  : $(cat $TMP/partition_racine)"
		else
			PARTITIONSMESSAGE="définir les partitions sur lesquelles installer 0"
		fi
		
		if [ -r $TMP/choix_media ]; then
			MEDIAMESSAGE="configuré : $(cat $TMP/choix_media)"
		else
			MEDIAMESSAGE="spécifier la source des dépôts de paquets"
		fi
		
		if [ "${INSTALLDEBUG}" = "" ]; then
			clear
		fi
		echo -e "\033[1;32mInstallation de votre système Linux.\033[0;0m"
		echo ""
		echo "Entrez ci-après le code de la rubrique souhaitée et appuyez sur ENTRÉE."
		echo "En cas de doute, faites les étapes suivantes dans l'ordre."
		echo ""
		echo "1 : AIDE       - lire l'aide de l'installateur"
		echo "2 : CLAVIER    - ${CLAVIERMESSAGE}"
		echo "3 : SWAP       - ${SWAPMESSAGE}"
		echo "4 : PARTITIONS - ${PARTITIONSMESSAGE}"
		echo "5 : PAQUETS    - ${MEDIAMESSAGE}"
		echo "6 : INSTALLER  - lancer l'installation des paquets logiciels"
		echo "7 : QUITTER    - quitter l'installateur"
		echo ""
		echo -n "Votre choix : "
		read CHOIXMENUPRINCIPAL;
		case "$CHOIXMENUPRINCIPAL" in
		"1")
			less /usr/share/0outils/installateur/scripts/aide.txt
			unset CHOIXMENUPRINCIPAL
			continue
		;;
		"2")
			. clavier.sh
			unset CHOIXMENUPRINCIPAL
			continue
		;;
		"3")
			. swap.sh
			unset CHOIXMENUPRINCIPAL
			continue
		;;
		"4")
			. partition_racine.sh
			. partitions_linux.sh
			. partitions_fat.sh
			. formatages.sh
			. montages.sh
			unset CHOIXMENUPRINCIPAL
			continue
		;;
		"5")
			. media.sh
			unset CHOIXMENUPRINCIPAL
			continue
		;;
		"6")
			if [ ! -r $TMP/choix_media -o ! -r $TMP/choix_partitions ]; then
				if [ "${INSTALLDEBUG}" = "" ]; then
					clear
				fi
				echo -e "\033[1;32mLe système n'est pas préparé.\033[0;0m"
				echo ""
				echo "Avant de procéder à l'installation des paquets logiciels,"
				echo "vous devez au préalable terminer certaines étapes, au minimum :"
				echo ""
				echo "- avoir choisi la partition sur laquelle installer votre système,"
				echo "- avoir spécifié le média source où se trouvent les paquets."
				echo ""
				echo "Appuyez sur ENTRÉE pour retourner au menu principal."
				echo ""
				read BLAH;
				unset CHOIXMENUPRINCIPAL
				continue
			else
				. paquets.sh
				
				# On copie 'resolv.conf' dans $SETUPROOT pour profiter de la résolution
				# des DNS du système autonome sans avoir à se reconnecter :
				if [ -r ${SETUPROOT}/etc/resolv.conf ]; then
					cat /etc/resolv.conf > ${SETUPROOT}/etc/resolv.conf
				fi
				
				. configurer.sh
			fi
			unset CHOIXMENUPRINCIPAL
			break
		;;
		"7")
			exit 0
		;;
		*)
			echo "Veuillez entrer un numéro valide (entre 1 et 7)."
			sleep 2
			continue
		esac
	done
fi

# On synchronise les systèmes de fichiers :
sync

# On s'assure de quelques permissions vitales, sait-on jamais :
chmod 0755 ${SETUPROOT}
chmod 1777 ${SETUPROOT}/tmp

# Ça ne fait pas de mal :
chroot ${SETUPROOT} /usr/sbin/depmod -a 2>/dev/null

# On essaie d'éjecter le disque s'il existe :
MOUNTEDDEVICE="$(mount | grep /mnt/cdrom | cut -d' ' -f1)"
if [ ! "${MOUNTEDDEVICE}" = "" ]; then
	umount /mnt/cdrom 1>/dev/null 2>/dev/null || true
	eject ${MOUNTEDDEVICE} 1>/dev/null 2>/dev/null || true
fi

# On démonte le volume s'il existe :
HDDEVICE="$(mount | grep /mnt/hd | cut -d' ' -f1)"
if [ ! "${HDDEVICE}" = "" ]; then
	umount /mnt/hd 1>/dev/null 2>/dev/null || true
fi

# Il est temps de redémarrer :
if [ "${INSTALLDEBUG}" = "" ]; then
	clear
fi
echo -e "\033[1;32mL'installation de votre système Linux est terminée.\033[0;0m"
echo ""
echo "Vous pouvez maintenant appuyer sur CTRL+ALT+SUPPR ou bien taper"
echo "'reboot' ou 'shutdown -r now' pour redémarrer la machine. Pensez à retirer"
echo "le média d'installation lors du redémarrage."
echo ""
echo -e "\033[1;0mEt ensuite ?\033[0;0m"
echo ""
echo "Référez-vous au site http://0linux.org pour en savoir davantage sur le"
echo "fonctionnement de votre système Linux."
echo ""
echo "À bientôt !"
echo ""

# On nettoie tout si le débogage est désactivé :
if [ "${INSTALLDEBUG}" = "" ]; then
	rm -rf $TMP/*
fi

# C'est fini.
